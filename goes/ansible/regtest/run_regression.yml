---

- hosts: server_emulator
  become: true
  ignore_errors: yes
  tasks:
    - file:
        path: "{{ regression_summary_report }}"
        state: absent

    - file:
        path: "{{ regression_summary_report }}"
        state: touch


# Run all quagga test cases
- include: quagga_main.yml


# Run all frr test cases
- include: frr_main.yml


# Run all gobgp test cases
- include: gobgp_main.yml


# Run all bird test cases
- include: bird_main.yml


# Run all port provision test cases
- include: port_provision_main.yml


# Run all dynamic port provision test cases
- include: port_provision_dynamic_main.yml


# Run all redis test cases
- include: redis_main.yml


# Run all vlan test cases
- include: vlan_main.yml


# Run all docker test cases
- include: docker_main.yml


# Run  all downgrade and upgrade playbook
- include: upgrade_main.yml


# Run all issues test cases
- include: issues_main.yml


# Run all link flap test cases
- include: link_flap_main.yml


# Run all ntp test cases
- include: ntp_main.yml

# Run all black hole test cases
- include: black_hole_main.yml

# Run all System Restartability Playbook
- include: system_restartability_main.yml


# Run all long Runnig Traffic testcases
- include: long_running_traffic_main.yml


# Run all SNMP test cases
- include: snmp_main.yml

- hosts: server_emulator
  become: true
  tasks:
    - name: Get the summary report
      shell: cat "{{ regression_summary_report }}"
      register: summary_report

    - name: Print summary report
      debug:
        var: summary_report.stdout_lines

    - file:
        path: "{{ playbook_dir }}/var_file.txt"
        state: absent

    - file:
        path: "{{ playbook_dir }}/var_file.txt"
        state: touch

    - name: Insert variables
      lineinfile:
        path: "{{ playbook_dir }}/var_file.txt"
        line: "main_job_build={{ build_no }}"

    - name: Insert variables
      lineinfile:
        path: "{{ playbook_dir }}/var_file.txt"
        line: "time={{ time }}"


    - name: Check summary report for failure
      fail:
        msg: "Regression Failed"
      when: summary_report.stdout.find('Failed') != -1
