---

- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "birdbgp_traffic_test_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf:spine
  become: true
  tasks:
    - name: Add dummy interface
      add_dummy_interface:
        switch_name: "{{ inventory_hostname }}"
      when: not dry_run

    - name: Take backup of /etc/bird/bird.conf
      copy:
        src: "{{ bird_conf_file }}"
        dest: "{{ bird_conf_file_bck }}"
        remote_src: true
      when: not dry_run

    - name: Add bgp config in /etc/bird/bird.conf
      copy:
        src: ../../files/{{inventory_hostname}}/bird_bgp_peering_ebgp_loopback.conf
        dest: "{{ bird_conf_file }}"
      when: not dry_run

    - name: Restart bird
      service:
        name: bird
        state: restarted
      when: not dry_run

    - file:
        path: "{{ longrun_log_dir }}"
        state: directory
      when: not dry_run


- hosts: spine
  become: true
  tasks:
    - name: Copy iperf parallel server shell script
      copy:
        src: ../../files/iperf-parallel-servers
        dest: ~/iperf-parallel-servers.sh
        mode: 0755
      when: not dry_run

    - name: Start iperf server instances
      shell: "~/iperf-parallel-servers.sh 4 server-report"
      when: not dry_run

    - name: Initiate iperf client and verify traffic
      verify_iperf_traffic_for_dummy:
        switch_name: "{{ inventory_hostname }}"
        switch_list: "{{ groups['spine'] }}"
        packet_size_list: "100,500,1500,12000"
        atime: 1000
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ longrun_log_dir }}"
        retries: "{{ package_retry }}"
        delay: "{{ package_delay }}"
      register: module_out
      when: not dry_run

    - name: Initiate iperf client and verify traffic
      verify_iperf_traffic_for_dummy:
        switch_name: "{{ inventory_hostname }}"
        switch_list: "{{ groups['spine'] }}"
        packet_size_list: "100,500,1500,12000"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ longrun_log_dir }}"
        dry_run_mode: "{{ dry_run }}"
      register: dry_run_out
      delegate_to: 127.0.0.1
      when: dry_run

    - set_fact:
        dry_run_cmds: "{{ dry_run_out.cmds }}"
      when: dry_run

    - command: "date +%Y%m%d%T"
      register: end_time
      when: not dry_run

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs
      when: not dry_run

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1
      ignore_errors: yes
      when: not dry_run

    - copy:
        src: "../../files/show_tech.py"
        dest: /tmp/show_tech.py
        mode: 0755
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - command: "/tmp/./show_tech.py --path /var/log/show_tech/ --hash_name {{ hostvars['server_emulator']['hash_name'] }}"
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - file:
        path: /tmp/show_tech.py
        state: absent
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - name: Stop iperf server instances
      command: "pkill iperf"
      when: not dry_run

    - shell: "rm ~/iperf-parallel-servers.sh"
      when: not dry_run


- hosts: leaf:spine
  become: true
  tasks:
    - include: ../../playbooks/get_goes_version_and_tags.yml
      when: not dry_run


- include: ../../playbooks/bgp/bird_bgp_traffic_test_reset.yml
  when:
    - reset_config
    - not dry_run
  ignore_errors: yes


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result
      when: not dry_run

    - debug:
        msg: "Test case result: {{ result.result_status }}"
      when: not dry_run

    - debug:
        msg: "Failure summary: {{ result.result_detail }}"
      when: not dry_run

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"
      when: not dry_run


- hosts: leaf:spine
  become: true
  vars:
    config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bird_bgp_peering_ebgp_loopback.conf') }}"
  tasks:
    - include: ../../playbooks/get_goes_status.yml start_time={{ hostvars['server_emulator']['start_time'] }} hash_name={{ hostvars['server_emulator']['hash_name'] }}
      when: not dry_run

    - name: Print bgp config
      debug:
        var: config_file
      when: dry_run
      delegate_to: 127.0.0.1

    - name: Print dry run output
      debug:
        var: dry_run_cmds
      when: dry_run
      delegate_to: 127.0.0.1
