---

# Uninstall packages stack
- include: ../../playbooks/installation/uninstall_packages.yml


# Reset the setup
- include: ../../playbooks/master_reset_invaders.yml


# Install quagga
- include: ../../playbooks/installation/quagga_install.yml


- hosts: leaf:spine
  become: true
  ignore_errors: yes
  tasks:
    - shell: dpkg --list | grep kernel
      register: kernel_version

    - debug:
        var: kernel_version.stdout_lines


- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "quagga_bgp_peering_ibgp_with_goes_boot_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf:spine
  become: true
  tasks:
    - file:
        path: "{{ boot_log_dir }}"
        state: directory

    - name: Take backup of /etc/quagga/bgpd.conf
      copy:
        src: "{{ quagga_bgp_conf_file }}"
        dest: "{{ quagga_bgp_conf_file_bck }}"
        remote_src: true

    - name: Add bgp config in /etc/quagga/bgpd.conf
      blockinfile:
        path: "{{ quagga_bgp_conf_file }}"
        marker: ""
        block: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ibgp.conf') }}"

    - name: Restart quagga
      service:
        name: quagga
        state: restarted

    - name: Wait for few seconds for bgp to establish connection
      pause:
        seconds: 35

    - name: Verify quagga bgp peering ibgp
      test_bgp_authentication:
        switch_name: "{{ inventory_hostname }}"
        config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ibgp.conf') }}"
        package_name: "quagga"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ boot_log_dir }}"
      register: module_out


- hosts: leaf:spine
  become: true
  tasks:
    - name: Verify services and interface status before powercycle
      verify_switch_status:
        switch_name: "{{ inventory_hostname }}"
        before: True
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ boot_log_dir }}"
      register: module_out

    - name: Powercycle the switch
      shell: "redis-cli -h {{ bmc_redis_ip }} hset platina-mk1-bmc psu.powercycle true"
      async: 1
      poll: 0
      delegate_to: 127.0.0.1
      ignore_errors: true

    - name: waiting for switch to come back after reboot
      local_action: wait_for host={{ ansible_ssh_host }} state=started port=22 delay=30 timeout=300 connect_timeout=15

    - name: Wait few seconds for GOES to come up
      pause:
        seconds: 15

    - name: Verify services and interface status after powercycle
      verify_switch_status:
        switch_name: "{{ inventory_hostname }}"
        before: False
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ boot_log_dir }}"
      register: module_out


- hosts: leaf:spine
  become: true
  tasks:
#    - name: Restart quagga
#      service:
#        name: quagga
#        state: restarted
#
#    - name: Wait for few seconds for bgp to establish connection
#      pause:
#        seconds: 35

    - name: Verify quagga bgp peering ibgp
      test_bgp_authentication:
        switch_name: "{{ inventory_hostname }}"
        config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ibgp.conf') }}"
        package_name: "quagga"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ boot_log_dir }}"
      register: module_out


- hosts: leaf:spine
  become: true
  tasks:
    - name: Verify services and interface status before powercycle
      verify_switch_status:
        switch_name: "{{ inventory_hostname }}"
        before: True
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ boot_log_dir }}"
      register: module_out

    - name: Powercycle the switch
      shell: "redis-cli -h {{ bmc_redis_ip }} hset platina-mk1-bmc psu.powercycle true"
      async: 1
      poll: 0
      delegate_to: 127.0.0.1
      ignore_errors: true

    - name: waiting for switch to come back after reboot
      local_action: wait_for host={{ ansible_ssh_host }} state=started port=22 delay=30 timeout=300 connect_timeout=15

    - name: Wait few seconds for GOES to come up
      pause:
        seconds: 15

    - name: Verify services and interface status after powercycle
      verify_switch_status:
        switch_name: "{{ inventory_hostname }}"
        before: False
        platina_redis_channel: "{{ platina_redis_channel }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ boot_log_dir }}"
      register: module_out

    - command: "date +%Y%m%d%T"
      register: end_time

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1
      ignore_errors: yes

    - copy:
        src: "../../files/show_tech.py"
        dest: /tmp/show_tech.py
        mode: 0755
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - command: "/tmp/./show_tech.py --path /var/log/show_tech/ --hash_name {{ hostvars['server_emulator']['hash_name'] }}"
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - file:
        path: /tmp/show_tech.py
        state: absent
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - include: ../../playbooks/get_goes_version_and_tags.yml


- include: ../../playbooks/bgp/quagga_bgp_peering_ibgp_reset.yml
  when: reset_config


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"


- hosts: leaf:spine
  become: true
  tasks:
    - include: ../../playbooks/get_goes_status.yml start_time={{ hostvars['server_emulator']['start_time'] }} hash_name={{ hostvars['server_emulator']['hash_name'] }}

