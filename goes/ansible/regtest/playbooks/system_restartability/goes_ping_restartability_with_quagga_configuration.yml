---

- hosts: leaf:spine
  become: true
  ignore_errors: yes
  tasks:
    - shell: dpkg --list | grep kernel
      register: kernel_version
      when: not dry_run

    - debug:
        var: kernel_version.stdout_lines
      when: not dry_run


- hosts: server_emulator
  become: true

  tasks:
    - command: "date +%Y%m%d%T"
      register: start_time

    - set_fact:
        hash_name: "goes_ping_restartability_with_quagga_configuration_{{ start_time.stdout }}"
        start_time: "{{ start_time.stdout }}"


- hosts: leaf:spine
  become: true
  tasks:
    - name: Take backup of /etc/quagga/zebra.conf
      command: "mv {{ quagga_zebra_conf_file }} {{ quagga_zebra_conf_file_bck }}"
      when: not dry_run
      
    - name: Copying config to /etc/quagga/zebra.conf
      copy:
        src: "../../files/{{inventory_hostname}}/quagga_zebra.conf"
        dest: "{{ quagga_zebra_conf_file }}"
      when: not dry_run

    - name: Take backup of /etc/quagga/bgpd.conf
      copy:
        src: "{{ quagga_bgp_conf_file }}"
        dest: "{{ quagga_bgp_conf_file_bck }}"
        remote_src: true
      when: not dry_run

    - name: Add dummy interface
      add_dummy_interface:
        switch_name: "{{ inventory_hostname }}"
      when: not dry_run

    - name: Add bgp config in /etc/quagga/bgpd.conf
      blockinfile:
        path: "{{ quagga_bgp_conf_file }}"
        marker: ""
        block: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ebgp_loopback.conf') }}"
      when: not dry_run

    - name: Restart quagga
      service:
        name: quagga
        state: restarted
      when: not dry_run

    - file:
        path: "{{ system_restartability_log_dir }}"
        state: directory
      when: not dry_run

    - name: Check quagga status
      command: "service quagga status"
      register: quagga_status
      ignore_errors: no
      when: not dry_run

    - debug:
        msg: "Quagga is in active state"
      when: "' Active: active ' in quagga_status.stdout"

    - name: Verify ping on pid kill
      test_ping_on_pid_kill:
        switch_name: "{{ inventory_hostname }}"
        config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ebgp_loopback.conf') }}"
        spine_list: "{{ groups['spine'] }}"
        leaf_list: "{{ groups['leaf'] }}"
        is_ping: True
        package_name: "frr"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ system_restartability_log_dir }}"
      register: module_out
      when: not dry_run

    - name: Verify ping on pid kill
      test_ping_on_pid_kill:
        switch_name: "{{ inventory_hostname }}"
        config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ebgp_loopback.conf') }}"
        spine_list: "{{ groups['spine'] }}"
        leaf_list: "{{ groups['leaf'] }}"
        is_ping: True
        package_name: "frr"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ system_restartability_log_dir }}"
        dry_run_mode: "{{ dry_run }}"
      register: dry_run_out
      delegate_to: 127.0.0.1
      when: dry_run

    - name: Goes restart
      command: goes start
      when: not dry_run

    - name: Check goes status
      command: goes status
      register: goes_status
      ignore_errors: no
      when: not dry_run

    - debug:
        msg: "{{ goes_status.stdout }}"
      when: not dry_run

    - name: Verify bgp neighborship and ping
      test_bgp_peering_loopback:
        switch_name: "{{ inventory_hostname }}"
        config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ebgp_loopback.conf') }}"
        package_name: "quagga"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ system_restartability_log_dir }}"
      register: module_out
      when: not dry_run

    - name: Verify bgp neighborship and ping
      test_bgp_peering_loopback:
        switch_name: "{{ inventory_hostname }}"
        config_file: "{{ lookup('file', '../../files/{{inventory_hostname}}/bgp_peering_ebgp_loopback.conf') }}"
        package_name: "quagga"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ system_restartability_log_dir }}"
        dry_run_mode: "{{ dry_run }}"
      register: dry_run_out
      delegate_to: 127.0.0.1
      when: dry_run

    - name: Verify link status b/w invaders
      verify_links:
        switch_name: "{{ inventory_hostname }}"
        leaf_list: "{{ groups['leaf'] }}"
        eth_list: "1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31"
        platina_redis_channel: "{{ platina_redis_channel }}"
      register: link_status

    - name: Print Link Status
      debug:
        var: link_status

    - set_fact:
        dry_run_cmds: "{{ dry_run_out.cmds }}"
      when: dry_run

    - command: "date +%Y%m%d%T"
      register: end_time
      when: not dry_run

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs
      when: not dry_run

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        start_time: "{{ hostvars['server_emulator']['start_time'] }}"
        end_time: "{{ end_time.stdout }}"
        hash_dict: "{{ module_out.hash_dict }}"
        log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1
      ignore_errors: yes
      when: not dry_run

    - copy:
        src: "../../files/show_tech.py"
        dest: /tmp/show_tech.py
        mode: 0755
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - command: "/tmp/./show_tech.py --path /var/log/show_tech/ --hash_name {{ hostvars['server_emulator']['hash_name'] }}"
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - file:
        path: /tmp/show_tech.py
        state: absent
      when: module_out.hash_dict['result.status'] == "Failed"
      ignore_errors: yes

    - include: ../../playbooks/get_goes_version_and_tags.yml
      when: not dry_run


- include: goes_ping_restartability_with_quagga_configuration_reset.yml
  when:
    - reset_config
    - not dry_run


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result
      when: not dry_run

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"
      when: not dry_run

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"
      when: not dry_run

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"
      when: not dry_run
