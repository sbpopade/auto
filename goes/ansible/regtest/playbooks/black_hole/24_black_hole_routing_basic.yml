---
- hosts: server_emulator
  become: true

  tasks:
  - command: "date +%Y%m%d%T"
    register: start_time

  - set_fact:
     hash_name: "24_blackhole_route_basic_{{ start_time.stdout }}"
     start_time: "{{ start_time.stdout }}"

- hosts: leaf[1]
  become: true
  tasks:
    - name: Copy black hole interfaces interfaces_24_black_hole_route_basic to /etc/network/interfaces
      template:
         src: "../../files/{{ inventory_hostname }}/interfaces_24_black_hole_route_basic"
         dest: "{{ network_interfaces_file }}"

    - name: Execute commands
      command: "{{ item }}"
      with_items:
          - 'rmmod platina-mk1'
          - 'modprobe platina-mk1 provision=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1'
          - 'ifdown -a --allow vnet'
          - 'ifup -a --allow vnet'
          - 'goes restart'

    - name: Wait for goes to start
      pause:
         seconds: 15

    - name: Verify black hole addition to tables
      verify_blackhole_route:
          switch_name: "{{ inventory_hostname }}"
          eth_list: "5"
          subnet_mask: "24"
          spine_list: "{{ groups['spine'] }}"
          leaf_list: "{{ groups['leaf'] }}"
          hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
          log_dir_path: "{{ blackhole_route_dir }}"
      register: module_out
      when: not dry_run

    - file:
          path: "{{ blackhole_route_dir }}"
          state: directory
      when: not dry_run

    - name: Power Cycle redis DB
      command: "redis-cli -h {{ bmc_redis_ip }} hset platina-mk1-bmc psu.powercycle true"
      when: not dry_run

    - name: waiting for switch to come back after powercycle
      local_action: wait_for host={{ ansible_ssh_host }} state=started port=22 delay=30 timeout=300 connect_timeout=15
      when: not dry_run

    - name: Reverify black hole addition to tables
      verify_blackhole_route:
        switch_name: "{{ inventory_hostname }}"
        eth_list: "5"
        subnet_mask: "24"
        spine_list: "{{ groups['spine'] }}"
        leaf_list: "{{ groups['leaf'] }}"
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
        log_dir_path: "{{ blackhole_route_dir }}"
      register: module_out
      when: not dry_run

    - command: "date +%Y%m%d%T"
      register: end_time
      when: not dry_run

    - name: Fetch the log file
      slurp:
        src: "{{ module_out.log_file_path }}"
      register: logs
      when: not dry_run

    - name: Store the test result in a hash in redis db on server emulator
      store_result_in_redis:
              hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
              start_time: "{{ hostvars['server_emulator']['start_time'] }}"
              end_time: "{{ end_time.stdout }}"
              hash_dict: "{{ module_out.hash_dict }}"
              log_content: "{{ logs['content'] | b64decode }}"
      delegate_to: 127.0.0.1
      ignore_errors: yes
      when: not dry_run

- include: black_hole_reset.yml
  when:
    - reset_config
    - not dry_run


- hosts: server_emulator
  become: true
  tasks:
    - name: Get the test result from redis db
      get_test_result_from_redis:
        hash_name: "{{ hostvars['server_emulator']['hash_name'] }}"
      register: result
      when: not dry_run

    - name: Print test case result
      debug:
        msg: "Test case result: {{ result.result_status }}"
      when: not dry_run

    - name: Print failure summary
      debug:
        msg: "Failure summary: {{ result.result_detail }}"
      when: not dry_run

    - lineinfile:
        path: "{{ regression_summary_report }}"
        line: "{{ hash_name }}: {{ result.result_status }}"
      when: not dry_run

- hosts: leaf:spine
  become: true
  gather_facts: no
  tasks:
    - include: ../../playbooks/get_goes_status.yml start_time={{ hostvars['server_emulator']['start_time'] }} hash_name={{ hostvars['server_emulator']['hash_name'] }}
      when: not dry_run
      ignore_errors: yes

